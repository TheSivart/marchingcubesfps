<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>array3d_sock_create(obj_control.chunk_num_x,obj_control.chunk_num_y,obj_control.chunk_num_z);
sock = 0;
ip=0;
z = 0;
load_num=0;
zdir = 0;
dead=true;
name="";
my_kills = 55;
my_deaths = 56;
verify = 0;
chunk_sent = false;
i1=0;
i2=0;
i3=0;
val=0;
loaded=true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>i1=0;
i2=0;
i3=0;
val=0;
loaded=true;

repeat(obj_control.chunk_num_x)
{
    repeat(obj_control.chunk_num_y)
    {
        repeat(obj_control.chunk_num_z)
        {
            val = array3d_get(i1,i2,i3);
            if (val==0)
            {
                with(obj_control)
                {
                    i1=other.i1;i2=other.i2;i3=other.i3;tsock=other.sock;
                    with(array3d_get(other.i1,other.i2,other.i3))
                    {
                        scr_pack_chunk_send(other.tsock);
                        //scr_log("resent packet");
                    }
                }
                loaded=false;
            }
            i3+=1;
        }
        i2+=1;
        i3=0;
    }
    i1+=1;
    i2=0;
}
if (loaded==false)
{
    alarm[0]=30;
}
else
{
    scr_log(string(name)+" has finished loading");
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Send chunks
if (load_num&lt;=obj_control.num_chunks&amp;&amp;chunk_sent==false)
{
    with(obj_chunk)
    {
        if(myload==other.load_num)
        {
            scr_pack_chunk_send(other.sock);
        }
    }
    load_num += 1;
}
else
{
    if(chunk_sent==false)
    {
        alarm[0]=30;
        chunk_sent = true;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
